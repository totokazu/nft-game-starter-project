{"ast":null,"code":"var _jsxFileName = \"/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log(\"getting contract characters to mint\"); //ミント可能な全nftキャラクターをコントラクトから呼び出す\n\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn:\", charactersTxn); //すべてのnftキャラクターのデータを変換\n\n        const characters = charactersTxn.map(characterData => transformCharacterData(characterData)); //ミント可能なすべてのnftキャラクターのstateを設定\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error(\"something went wrong fetching characters:\", error);\n      }\n    };\n\n    if (gameContract) {\n      getCharacters();\n    }\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCharacter, \"ReBpEb1ZDzzSsIn8oOlkhmevdME=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","console","log","getCharacters","charactersTxn","getAllDefaultCharacters","map","characterData","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,MAAMC,eAAe,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA;AAAD,GAAqB;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEY,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAID,QAAJ,EAAc;AACV,YAAME,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMR,YAAY,GAAG,IAAIR,MAAM,CAACiB,QAAX,CACjBhB,gBADiB,EAEjBE,UAAU,CAACe,GAFM,EAGjBH,MAHiB,CAArB;AAMAN,MAAAA,eAAe,CAACD,YAAD,CAAf;AACC,KAVL,MAUU;AACFW,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AACR,GAfQ,EAeP,EAfO,CAAT;AAgBAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,aAAa,GAAG,YAAY;AAC9B,UAAG;AACCF,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EADD,CAEC;;AACA,cAAME,aAAa,GAAG,MAAMd,YAAY,CAACe,uBAAb,EAA5B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BE,aAA7B,EAJD,CAMC;;AACA,cAAMhB,UAAU,GAAGgB,aAAa,CAACE,GAAd,CAAmBC,aAAD,IACrCvB,sBAAsB,CAACuB,aAAD,CADH,CAAnB,CAPD,CAWC;;AACAlB,QAAAA,aAAa,CAACD,UAAD,CAAb;AACH,OAbD,CAaE,OAAMoB,KAAN,EAAY;AACVP,QAAAA,OAAO,CAACO,KAAR,CAAc,2CAAd,EAA0DA,KAA1D;AACH;AACJ,KAjBD;;AAkBA,QAAGlB,YAAH,EAAgB;AACZa,MAAAA,aAAa;AAChB;AACJ,GAtBQ,EAsBP,CAACb,YAAD,CAtBO,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhDD;;GAAMJ,e;;KAAAA,e;AAkDN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\n\nconst SelectCharacter = ({setCharacterNFT}) =>{\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n\n            setGameContract(gameContract);\n            }else {\n                console.log(\"ethereum object not found\");\n            }\n    },[]);\n    useEffect(() => {\n        const getCharacters = async () => {\n            try{\n                console.log(\"getting contract characters to mint\");\n                //ミント可能な全nftキャラクターをコントラクトから呼び出す\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n                console.log(\"charactersTxn:\",charactersTxn);\n\n                //すべてのnftキャラクターのデータを変換\n                const characters = charactersTxn.map((characterData) =>\n                transformCharacterData(characterData)\n                );\n\n                //ミント可能なすべてのnftキャラクターのstateを設定\n                setCharacters(characters);                \n            } catch(error){\n                console.error(\"something went wrong fetching characters:\",error);\n            }\n        };\n        if(gameContract){\n            getCharacters();\n        }\n    },[gameContract]);\n    return (\n        <div className='select-character-container'>\n            <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\n        </div>\n    );\n};\n\nexport default SelectCharacter;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport './App.css';\nimport './Components/SelectCharacter';\nimport SelectCharacter from \"./Components/SelectCharacter\"; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'あなたのTwitterハンドル';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [chracterNFT, setCharacterNFT] = useState(null);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"Make sure you have metamask\");\n        return;\n      } else {\n        console.log(\"we have the ethereum object\", ethereum);\n        const accounts = await ethereum.request({\n          method: 'eth_accounts'\n        });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"found an authorized account\", account);\n          setCurrentAccount(account);\n        } else {\n          console.log(\"No authorized account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWalletAction = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert('get metamask');\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(\"connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderContent = () => {\n    if (!currentAccount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/yMocj5x.png\",\n          alt: \"Pikachu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button connect-wallet-button\",\n          onClick: connectWalletAction,\n          children: \"connect wallet to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    } else if (currentAccount && !chracterNFT) {\n      return /*#__PURE__*/_jsxDEV(SelectCharacter, {\n        setCharacterNFT: setCharacterNFT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"\\u26A1\\uFE0F METAVERSE GAME \\u26A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u3068\\u5354\\u529B\\u3057\\u3066\\u30DC\\u30B9\\u3092\\u5012\\u305D\\u3046\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), renderContent()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"L1XGh+N78/Mmhk1Wql1jHFhIFXQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/App.js"],"names":["React","useEffect","useState","SelectCharacter","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","chracterNFT","setCharacterNFT","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","error","connectWalletAction","alert","renderContent","twitterLogo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport './Components/SelectCharacter';\nimport SelectCharacter from \"./Components/SelectCharacter\";\n\n// Constants\nconst TWITTER_HANDLE = 'あなたのTwitterハンドル';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  const [currentAccount,setCurrentAccount] =useState(null);\n  const [chracterNFT,setCharacterNFT] = useState(null);\n\n  const checkIfWalletIsConnected = async () =>{\n    try{\n      const {ethereum} = window;\n      if(!ethereum){\n        console.log(\"Make sure you have metamask\");\n        return;\n      }else{\n        console.log(\"we have the ethereum object\", ethereum);\n        const accounts = await ethereum.request({method:'eth_accounts'});\n        if(accounts.length !== 0){\n          const account = accounts[0];\n          console.log(\"found an authorized account\",account)\n          setCurrentAccount(account);\n        }else{\n          console.log(\"No authorized account found\");\n        }\n      }\n    }catch (error){\n      console.log(error);\n\n    }\n  };\n  const connectWalletAction = async () => {\n    try{\n      const {ethereum} = window;\n      if(!ethereum){\n        alert('get metamask');\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n      console.log(\"connected\",accounts[0]);\n      setCurrentAccount(accounts[0]);\n    }catch (error){\n      console.log(error);\n    }\n  };\n\n  const renderContent = () => {\n    if(!currentAccount){\n      return(\n        <div className=\"connect-wallet-container\">\n            <img\n              src=\"https://i.imgur.com/yMocj5x.png\"\n              alt=\"Pikachu\"\n            />\n            <button\n              className=\"cta-button connect-wallet-button\"\n              onClick={connectWalletAction}\n            >\n              connect wallet to get started\n            </button>\n          </div>\n      ) \n    }else if(currentAccount && !chracterNFT){\n      return <SelectCharacter setCharacterNFT={setCharacterNFT}/>;\n    }\n  };\n  useEffect(() =>{\n    checkIfWalletIsConnected();\n  },[]);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n        <p className=\"header gradient-text\">⚡️ METAVERSE GAME ⚡️</p>\n          <p className=\"sub-text\">プレイヤーと協力してボスを倒そう✨</p>\n          {renderContent()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
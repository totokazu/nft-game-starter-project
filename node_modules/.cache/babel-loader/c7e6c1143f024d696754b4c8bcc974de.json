{"ast":null,"code":"var _jsxFileName = \"/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n\n  const runAttackAction = async () => {}; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Arena, \"hffOBmb6uNS/O642ivQyNGpPgu8=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","runAttackAction","fetchBoss","bossTxn","getBigBoss","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","imageURI","hp","maxHp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT }) => {\n  // コントラクトのデータを保有する状態変数を初期化します。\n    const [gameContract, setGameContract] = useState(null);\n    const [boss, setBoss] = useState(null);\n\n    const runAttackAction = async () => {};\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss:\", bossTxn);\n            setBoss(transformCharacterData(bossTxn));\n        };\n        if (gameContract) {\n        // コントラクトの準備ができたら、ボスのメタデータを取得します。\n        fetchBoss();\n        }\n    }, [gameContract]);\n  // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n    return (\n        <div className=\"arena-container\">\n          {/* ボスをレンダリングします */}\n            {boss && (\n                <div className=\"boss-container\">\n                    <div className={`boss-content`}>\n                        <h2>🔥 {boss.name} 🔥</h2>\n                        <div className=\"image-content\">\n                            <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n                            <div className=\"health-bar\">\n                                <progress value={boss.hp} max={boss.maxHp} />\n                                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"attack-container\">\n                        <button className=\"cta-button\" onClick={runAttackAction}>\n                            {`💥 Attack ${boss.name}`}\n                        </button>\n                    </div>\n                </div>\n            )}\n          {/* NFT キャラクター */}\n            <p>NFT キャラクターを表示します。</p>\n        </div>\n    );\n};\nexport default Arena;"]},"metadata":{},"sourceType":"module"}
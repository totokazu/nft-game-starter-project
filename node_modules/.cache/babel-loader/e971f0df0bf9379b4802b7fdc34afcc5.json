{"ast":null,"code":"var _jsxFileName = \"/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../LoadingIndicator\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT,\n    setCharacterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n  const [attackState, setAttackState] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n\n  const runAttackAction = async () => {\n    try {\n      // コントラクトが呼び出されたことを確認します。\n      if (gameContract) {\n        // attackState の状態を attacking に設定します。\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\"); // NFT キャラクターがボスを攻撃します。\n\n        const attackTxn = await gameContract.attackBoss(); // トランザクションがマイニングされるまで待ちます。\n\n        await attackTxn.wait();\n        console.log(\"attackTxn:\", attackTxn); // attackState の状態を hit に設定します。\n\n        setAttackState(\"hit\"); // 攻撃ダメージの表示をtrueに設定し（表示）、5秒後にfalseに設定する（非表示)\n\n        setShowToast(true);\n        setTimeout(() => {\n          setShowToast(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss:\", error);\n      setAttackState(\"\");\n    }\n  }; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    }; // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n\n\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n      // ボスの新しいHPを取得します。\n      const bossHp = newBossHp.toNumber(); // NFT キャラクターの新しいHPを取得します。\n\n      const playerHp = newPlayerHp.toNumber();\n      console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`); // NFT キャラクターとボスのHPを更新します。\n\n      setBoss(prevState => {\n        return { ...prevState,\n          hp: bossHp\n        };\n      });\n      setCharacterNFT(prevState => {\n        return { ...prevState,\n          hp: playerHp\n        };\n      });\n    }; // コントラクトが呼び出されていたら、下記を実行します。\n\n\n    if (gameContract) {\n      fetchBoss(); // リスナーの設定：ボスが攻撃された通知を受け取ります。\n\n      gameContract.on(\"AttackComplete\", onAttackComplete);\n    } // コンポーネントがマウントされたら、リスナーを停止する。\n\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"AttackComplete\", onAttackComplete);\n      }\n    };\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toast\",\n      className: showToast ? \"show\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"desc\",\n        children: `💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), attackState === \"attacking\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Attacking \\u2694\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: characterNFT.imageURI,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `⚔️ Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Arena, \"30K7Lc/ijIzASkE4LIZ33tG48Ww=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/home/totokazu/unchain1/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","Arena","characterNFT","setCharacterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","console","log","attackTxn","attackBoss","wait","setTimeout","error","fetchBoss","bossTxn","getBigBoss","onAttackComplete","newBossHp","newPlayerHp","bossHp","toNumber","playerHp","prevState","hp","on","off","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","attackDamage","imageURI","maxHp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT , setCharacterNFT }) => {\n  // コントラクトのデータを保有する状態変数を初期化します。\n    const [gameContract, setGameContract] = useState(null);\n    const [boss, setBoss] = useState(null);\n    const [attackState, setAttackState] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n\n    const runAttackAction = async () => {\n        try {\n            // コントラクトが呼び出されたことを確認します。\n            if (gameContract) {\n              // attackState の状態を attacking に設定します。\n                setAttackState(\"attacking\");\n                console.log(\"Attacking boss...\");\n        \n              // NFT キャラクターがボスを攻撃します。\n                const attackTxn = await gameContract.attackBoss();\n        \n              // トランザクションがマイニングされるまで待ちます。\n                await attackTxn.wait();\n                console.log(\"attackTxn:\", attackTxn);\n        \n              // attackState の状態を hit に設定します。\n                setAttackState(\"hit\");\n\n                // 攻撃ダメージの表示をtrueに設定し（表示）、5秒後にfalseに設定する（非表示)\n                setShowToast(true);\n                setTimeout(() => {\n                    setShowToast(false);\n                }, 5000);\n            }\n        } catch (error) {\n            console.error(\"Error attacking boss:\", error);\n            setAttackState(\"\");\n        }\n    };\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss:\", bossTxn);\n            setBoss(transformCharacterData(bossTxn));\n        };\n        // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n        const onAttackComplete = (newBossHp, newPlayerHp) => {\n            // ボスの新しいHPを取得します。\n            const bossHp = newBossHp.toNumber();\n            // NFT キャラクターの新しいHPを取得します。\n            const playerHp = newPlayerHp.toNumber();\n            console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n            // NFT キャラクターとボスのHPを更新します。\n            setBoss((prevState) => {\n                return { ...prevState, hp: bossHp };\n            });\n            setCharacterNFT((prevState) => {\n                return { ...prevState, hp: playerHp };\n            });\n        };\n\n        // コントラクトが呼び出されていたら、下記を実行します。\n        if (gameContract) {\n            fetchBoss();\n            // リスナーの設定：ボスが攻撃された通知を受け取ります。\n            gameContract.on(\"AttackComplete\", onAttackComplete);\n        }\n\n        // コンポーネントがマウントされたら、リスナーを停止する。\n        return () => {\n            if (gameContract) {\n                gameContract.off(\"AttackComplete\", onAttackComplete);\n            }\n        };\n    }, [gameContract]);\n  // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n    return (\n        <div className=\"arena-container\">\n            {boss && characterNFT && (\n                <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\n                    <div id=\"desc\">{`💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n                </div>\n    )}\n          {/* ボスをレンダリングします */}\n            {boss && (\n                <div className=\"boss-container\">\n                    <div className={`boss-content ${attackState}`}>\n                        <h2>🔥 {boss.name} 🔥</h2>\n                        <div className=\"image-content\">\n                            <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n                            <div className=\"health-bar\">\n                                <progress value={boss.hp} max={boss.maxHp} />\n                                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"attack-container\">\n                        <button className=\"cta-button\" onClick={runAttackAction}>\n                            {`💥 Attack ${boss.name}`}\n                        </button>\n                    </div>\n                    {attackState === \"attacking\" && (\n                        <div className=\"loading-indicator\">\n                            <LoadingIndicator />\n                            <p>Attacking ⚔️</p>\n                        </div>\n                    )}\n                </div>\n            )}\n            {/* NFT キャラクター をレンダリングします*/}\n            {characterNFT && (\n                <div className=\"players-container\">\n                    <div className=\"player-container\">\n                        <h2>Your Character</h2>\n                        <div className=\"player\">\n                            <div className=\"image-content\">\n                                <h2>{characterNFT.name}</h2>\n                                <img\n                                    src={characterNFT.imageURI}\n                                    alt={`Character ${characterNFT.name}`}\n                                />\n                                <div className=\"health-bar\">\n                                    <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                                    <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                                </div>\n                            </div>\n                            <div className=\"stats\">\n                                <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Arena;"]},"metadata":{},"sourceType":"module"}